generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Categoria {
  id             Int        @id @default(autoincrement())
  nombre         String     @db.VarChar(100)
  descripcion    String?
  activo         Boolean    @default(true)
  fechaCreacion  DateTime   @default(now()) @map("fecha_creacion")
  productos      Producto[]

  @@map("categorias")
}

model Proveedor {
  id        Int        @id @default(autoincrement())
  nombre    String     @db.VarChar(200)
  contacto  String?    @db.VarChar(100)
  telefono  String?    @db.VarChar(20)
  email     String?    @db.VarChar(100)
  direccion String?
  activo    Boolean    @default(true)
  productos Producto[]

  @@map("proveedores")
}

model Producto {
  id            Int             @id @default(autoincrement())
  codigoBarras  String?         @unique @map("codigo_barras") @db.VarChar(50)
  nombre        String          @db.VarChar(200)
  descripcion   String?
  categoriaId   Int?            @map("categoria_id")
  proveedorId   Int?            @map("proveedor_id")
  precioCompra  Decimal?        @map("precio_compra") @db.Decimal(10, 2)
  precioVenta   Decimal         @map("precio_venta") @db.Decimal(10, 2)
  stockActual   Int             @default(0) @map("stock_actual")
  stockMinimo   Int             @default(5) @map("stock_minimo")
  imagenUrl     String?         @map("imagen_url")
  activo        Boolean         @default(true)
  fechaCreacion DateTime        @default(now()) @map("fecha_creacion")
  categoria     Categoria?      @relation(fields: [categoriaId], references: [id])
  proveedor     Proveedor?      @relation(fields: [proveedorId], references: [id])
  ordenDetalles OrdenDetalle[]

  @@map("productos")
}

model Cliente {
  id            Int      @id @default(autoincrement())
  nombre        String   @db.VarChar(100)
  apellido      String   @db.VarChar(100)
  email         String?  @unique @db.VarChar(100)
  telefono      String?  @db.VarChar(20)
  direccion     String?
  fechaRegistro DateTime @default(now()) @map("fecha_registro")
  ordenes       Orden[]

  @@map("clientes")
}

model Orden {
  id          Int            @id @default(autoincrement())
  clienteId   Int?           @map("cliente_id")
  total       Decimal        @db.Decimal(10, 2)
  estado      String         @default("pendiente") @db.VarChar(50)
  fechaOrden  DateTime       @default(now()) @map("fecha_orden")
  cliente     Cliente?       @relation(fields: [clienteId], references: [id])
  detalles    OrdenDetalle[]

  @@map("ordenes")
}

model OrdenDetalle {
  id             Int     @id @default(autoincrement())
  ordenId        Int     @map("orden_id")
  productoId     Int     @map("producto_id")
  cantidad       Int
  precioUnitario Decimal @map("precio_unitario") @db.Decimal(10, 2)
  subtotal       Decimal @db.Decimal(10, 2)
  orden          Orden   @relation(fields: [ordenId], references: [id])
  producto       Producto @relation(fields: [productoId], references: [id])

  @@map("orden_detalles")
}

model Usuario {
  id            Int      @id @default(autoincrement())
  username      String   @unique @db.VarChar(50)
  email         String   @unique @db.VarChar(100)
  passwordHash  String   @map("password_hash") @db.VarChar(255)
  rol           String   @default("empleado") @db.VarChar(20)
  activo        Boolean  @default(true)
  fechaCreacion DateTime @default(now()) @map("fecha_creacion")

  @@map("usuarios")
}
